#dbListTables(con)
name<-"recommendation"
#dbWriteTable(con, name, recom_table)
dbWriteTable(con, name, recom_table, append=TRUE, row.names=FALSE)
#SELECT DISTINCT(items.item_name),items.Energ_Kcal,items.Carbohydrt,items.Protein FROM `items` inner join `user_selection` ON items.item_name=user_selection.rhs
#SELECT DISTINCT(items.item_name),items.Energ_Kcal,items.Carbohydrt,items.Protein FROM `items` inner join `recommendation` ON items.item_name=recommendation.rhs
library(dplyr)
library(reshape2)
library(Matrix)
library(stringr)
#install.packages('stringdist')
library(stringdist)
#insatll.packages('arulesViz')
#library(arulesViz)
#install.packages('arules')
library(arules)
setwd("/Applications/XAMPP/xamppfiles/htdocs/Client_project")
groceries<-read.transactions("items.csv",sep = ",")
summary(groceries)
#install.packages('RMySQL')
require(RMySQL) #if already installed
con <- dbConnect(RMySQL::MySQL() ,host = "127.0.0.1",dbname="be_fit",user = "root", password = "" )
setwd("/Applications/XAMPP/xamppfiles/htdocs/Client_project")
items<-read.csv("list.csv",sep = ",")
itemsdf<- data.frame(items)
dbListTables(con)
inspect(groceries[1:5])
itemFrequency(groceries[, 1:3])
itemFrequencyPlot(groceries, support = 0.1)
itemFrequencyPlot(groceries, topN = 20)
image(groceries[1:5])
groceryrules <- apriori(groceries, parameter = list(support = 0.006,
confidence = 0.25, minlen = 2))
groceryrules
summary(groceryrules)
inspect(groceryrules[1:3])
inspect(sort(groceryrules, by = "lift")[1:5])
groceryrules_df <- as(groceryrules, "data.frame")
str(groceryrules_df)
rules = sapply(groceryrules_df$rules,function(x){
x = gsub("[\\{\\}]", "", regmatches(x, gregexpr("\\{.*\\}", x))[[1]])
x = gsub("=>",",",x)
x = str_replace_all(x," ","")
return( x )
})
rules = as.character(rules)
rules = str_split(rules,",")
groceryrules_df$lhs = sapply( rules, "[[", 1)
groceryrules_df$rhs = sapply( rules , "[[", 2)
groceryrules_df$rules = NULL
rm(rules)
gc()
#groceryrules_df = groceryrules_df %>% left_join(groceries,by=c("lhs"="lhs") )
groceryrules_df %>% arrange(desc(lift)) %>% select(lhs,rhs,support,confidence,lift) %>% head()
#################selected item from UI by user
dbListFields(con, 'Selected_Items')
rs = dbSendQuery(con, "select * from Selected_Items ORDER BY ID DESC LIMIT 1")
data = fetch(rs, n=-1)
userid <- data$user_ID
item<-data$Item_Name
recom_table<-groceryrules_df %>%
filter(str_detect(lhs, item) ) %>%
select(lhs,rhs,support,confidence,lift) %>%
head(20)
# recom_table  <- data.frame(recom_table)
# userid<-'NULL'
recom_table<-cbind(recom_table,userid)
View(recom_table)
#dbListTables(con)
name<-"recommendation"
dbWriteTable(con, name, recom_table, append=TRUE, row.names=FALSE)
View(recom_table)
library(dplyr)
library(reshape2)
library(Matrix)
library(stringr)
#install.packages('stringdist')
library(stringdist)
#insatll.packages('arulesViz')
#library(arulesViz)
#install.packages('arules')
library(arules)
setwd("/Applications/XAMPP/xamppfiles/htdocs/Client_project")
groceries<-read.transactions("items.csv",sep = ",")
summary(groceries)
#install.packages('RMySQL')
require(RMySQL) #if already installed
con <- dbConnect(RMySQL::MySQL() ,host = "127.0.0.1",dbname="be_fit",user = "root", password = "" )
setwd("/Applications/XAMPP/xamppfiles/htdocs/Client_project")
items<-read.csv("list.csv",sep = ",")
itemsdf<- data.frame(items)
dbListTables(con)
#name<-"items"
#dbWriteTable(con, name, itemsdf)
inspect(groceries[1:5])
itemFrequency(groceries[, 1:3])
itemFrequencyPlot(groceries, support = 0.1)
itemFrequencyPlot(groceries, topN = 20)
image(groceries[1:5])
groceryrules <- apriori(groceries, parameter = list(support = 0.006,
confidence = 0.25, minlen = 2))
groceryrules
summary(groceryrules)
inspect(groceryrules[1:3])
inspect(sort(groceryrules, by = "lift")[1:5])
#chickenrules <- subset(groceryrules, items %in% "yogurt")
#inspect(chickenrules)
#write(groceryrules, file = "groceryrules.csv", sep = ",", quote = TRUE, row.names = FALSE)
groceryrules_df <- as(groceryrules, "data.frame")
str(groceryrules_df)
#plot(chickenrules, method="graph", control=list(type="items"), shading = "lift")
rules = sapply(groceryrules_df$rules,function(x){
x = gsub("[\\{\\}]", "", regmatches(x, gregexpr("\\{.*\\}", x))[[1]])
x = gsub("=>",",",x)
x = str_replace_all(x," ","")
return( x )
})
rules = as.character(rules)
rules = str_split(rules,",")
groceryrules_df$lhs = sapply( rules, "[[", 1)
groceryrules_df$rhs = sapply( rules , "[[", 2)
groceryrules_df$rules = NULL
rm(rules)
gc()
#groceryrules_df = groceryrules_df %>% left_join(groceries,by=c("lhs"="lhs") )
groceryrules_df %>% arrange(desc(lift)) %>% select(lhs,rhs,support,confidence,lift) %>% head()
#################selected item from UI by user
dbListFields(con, 'Selected_Items')
rs = dbSendQuery(con, "select * from Selected_Items ORDER BY ID DESC LIMIT 1")
data = fetch(rs, n=-1)
userid <- data$user_ID
item<-data$Item_Name
recom_table<-groceryrules_df %>%
filter(str_detect(lhs, item) ) %>%
select(lhs,rhs,support,confidence,lift) %>%
head(20)
# recom_table  <- data.frame(recom_table)
# userid<-'NULL'
recom_table<-cbind(recom_table,userid)
# recom_table
#if already installed
#con <- dbConnect(RMySQL::MySQL(), host = "localhost",dbname="fit",user = "root", password = "")
#dbListTables(con)
name<-"recommendation"
#dbWriteTable(con, name, recom_table)
dbWriteTable(con, name, recom_table, append=TRUE, row.names=FALSE)
#SELECT DISTINCT(items.item_name),items.Energ_Kcal,items.Carbohydrt,items.Protein FROM `items` inner join `user_selection` ON items.item_name=user_selection.rhs
#SELECT DISTINCT(items.item_name),items.Energ_Kcal,items.Carbohydrt,items.Protein FROM `items` inner join `recommendation` ON items.item_name=recommendation.rhs
View(recom_table)
library(dplyr)
library(reshape2)
library(Matrix)
library(stringr)
#install.packages('stringdist')
library(stringdist)
#insatll.packages('arulesViz')
#library(arulesViz)
#install.packages('arules')
library(arules)
setwd("/Applications/XAMPP/xamppfiles/htdocs/Client_project")
groceries<-read.transactions("items.csv",sep = ",")
summary(groceries)
#install.packages('RMySQL')
require(RMySQL) #if already installed
con <- dbConnect(RMySQL::MySQL() ,host = "127.0.0.1",dbname="be_fit",user = "root", password = "" )
setwd("/Applications/XAMPP/xamppfiles/htdocs/Client_project")
items<-read.csv("list.csv",sep = ",")
itemsdf<- data.frame(items)
dbListTables(con)
inspect(groceries[1:5])
itemFrequency(groceries[, 1:3])
itemFrequencyPlot(groceries, support = 0.1)
itemFrequencyPlot(groceries, topN = 20)
image(groceries[1:5])
groceryrules <- apriori(groceries, parameter = list(support = 0.006,
confidence = 0.25, minlen = 2))
groceryrules
summary(groceryrules)
inspect(groceryrules[1:3])
inspect(sort(groceryrules, by = "lift")[1:5])
groceryrules_df <- as(groceryrules, "data.frame")
str(groceryrules_df)
rules = sapply(groceryrules_df$rules,function(x){
x = gsub("[\\{\\}]", "", regmatches(x, gregexpr("\\{.*\\}", x))[[1]])
x = gsub("=>",",",x)
x = str_replace_all(x," ","")
return( x )
})
rules = as.character(rules)
rules = str_split(rules,",")
groceryrules_df$lhs = sapply( rules, "[[", 1)
groceryrules_df$rhs = sapply( rules , "[[", 2)
groceryrules_df$rules = NULL
rm(rules)
gc()
#groceryrules_df = groceryrules_df %>% left_join(groceries,by=c("lhs"="lhs") )
groceryrules_df %>% arrange(desc(lift)) %>% select(lhs,rhs,support,confidence,lift) %>% head()
#################selected item from UI by user
dbListFields(con, 'Selected_Items')
rs = dbSendQuery(con, "select * from Selected_Items ORDER BY ID DESC LIMIT 1")
data = fetch(rs, n=-1)
userid <- data$user_ID
item<-data$Item_Name
recom_table<-groceryrules_df %>%
filter(str_detect(lhs, item) ) %>%
select(lhs,rhs,support,confidence,lift) %>%
head(20)
# recom_table  <- data.frame(recom_table)
# userid<-'NULL'
recom_table<-cbind(recom_table,userid)
View(recom_table)
userid
recom_table<-groceryrules_df %>%
filter(str_detect(lhs, item) ) %>%
select(lhs,rhs,support,confidence,lift) %>%
head(20)
View(recom_table)
View(data)
View(groceryrules_df)
recom_table<-groceryrules_df %>%
filter(str_detect(lhs, item) ) %>%
select(lhs,rhs,support,confidence,lift) %>%
head(20)
View(groceryrules_df)
library(dplyr)
library(reshape2)
library(Matrix)
library(stringr)
#install.packages('stringdist')
library(stringdist)
#insatll.packages('arulesViz')
#library(arulesViz)
#install.packages('arules')
library(arules)
setwd("/Applications/XAMPP/xamppfiles/htdocs/Client_project")
groceries<-read.transactions("items.csv",sep = ",")
summary(groceries)
#install.packages('RMySQL')
require(RMySQL) #if already installed
con <- dbConnect(RMySQL::MySQL() ,host = "127.0.0.1",dbname="be_fit",user = "root", password = "" )
setwd("/Applications/XAMPP/xamppfiles/htdocs/Client_project")
items<-read.csv("list.csv",sep = ",")
itemsdf<- data.frame(items)
dbListTables(con)
inspect(groceries[1:5])
itemFrequency(groceries[, 1:3])
itemFrequencyPlot(groceries, support = 0.1)
itemFrequencyPlot(groceries, topN = 20)
image(groceries[1:5])
groceryrules <- apriori(groceries, parameter = list(support = 0.006,
confidence = 0.25, minlen = 2))
groceryrules
summary(groceryrules)
inspect(groceryrules[1:3])
inspect(sort(groceryrules, by = "lift")[1:5])
groceryrules_df <- as(groceryrules, "data.frame")
str(groceryrules_df)
rules = sapply(groceryrules_df$rules,function(x){
x = gsub("[\\{\\}]", "", regmatches(x, gregexpr("\\{.*\\}", x))[[1]])
x = gsub("=>",",",x)
x = str_replace_all(x," ","")
return( x )
})
rules = as.character(rules)
rules = str_split(rules,",")
groceryrules_df$lhs = sapply( rules, "[[", 1)
groceryrules_df$rhs = sapply( rules , "[[", 2)
groceryrules_df$rules = NULL
rm(rules)
gc()
#groceryrules_df = groceryrules_df %>% left_join(groceries,by=c("lhs"="lhs") )
groceryrules_df %>% arrange(desc(lift)) %>% select(lhs,rhs,support,confidence,lift) %>% head()
#################selected item from UI by user
dbListFields(con, 'Selected_Items')
rs = dbSendQuery(con, "select * from Selected_Items ORDER BY ID DESC LIMIT 1")
data = fetch(rs, n=-1)
userid <- data$user_ID
item<-data$Item_Name
recom_table<-groceryrules_df %>%
filter(str_detect(lhs, item) ) %>%
select(lhs,rhs,support,confidence,lift) %>%
head(20)
View(recom_table)
# recom_table  <- data.frame(recom_table)
# userid<-'NULL'
recom_table<-cbind(recom_table,userid)
#dbListTables(con)
name<-"recommendation"
dbWriteTable(con, name, recom_table, append=TRUE, row.names=FALSE)
#SELECT DISTINCT(items.item_name),items.Energ_Kcal,items.Carbohydrt,items.Protein FROM `items` inner join `recommendation` ON items.item_name=recommendation.rhs
#SELECT DISTINCT(items.item_name),items.Energ_Kcal,items.Carbohydrt,items.Protein FROM `items` inner join `recommendation` ON items.item_name=recommendation.rhs
#SELECT DISTINCT(items.item_name),items.Energ_Kcal,items.Carbohydrt,items.Protein FROM `items` inner join `recommendation` ON items.item_name=recommendation.rhs
#SELECT DISTINCT(items.item_name),items.Energ_Kcal,items.Carbohydrt,items.Protein FROM `items` inner join `recommendation` ON items.item_name=recommendation.rhs
#SELECT DISTINCT(items.item_name),items.Energ_Kcal,items.Carbohydrt,items.Protein FROM `items` inner join `recommendation` ON items.item_name=recommendation.rhs
#SELECT DISTINCT(items.item_name),items.Energ_Kcal,items.Carbohydrt,items.Protein FROM `items` inner join `recommendation` ON items.item_name=recommendation.rhs
library(dplyr)
library(reshape2)
library(Matrix)
library(stringr)
#install.packages('stringdist')
library(stringdist)
#insatll.packages('arulesViz')
#library(arulesViz)
#install.packages('arules')
library(arules)
setwd("/Applications/XAMPP/xamppfiles/htdocs/Client_project")
groceries<-read.transactions("items.csv",sep = ",")
summary(groceries)
#install.packages('RMySQL')
require(RMySQL) #if already installed
con <- dbConnect(RMySQL::MySQL() ,host = "127.0.0.1",dbname="be_fit",user = "root", password = "" )
setwd("/Applications/XAMPP/xamppfiles/htdocs/Client_project")
items<-read.csv("list.csv",sep = ",")
itemsdf<- data.frame(items)
dbListTables(con)
inspect(groceries[1:5])
itemFrequency(groceries[, 1:3])
itemFrequencyPlot(groceries, support = 0.1)
itemFrequencyPlot(groceries, topN = 20)
image(groceries[1:5])
groceryrules <- apriori(groceries, parameter = list(support = 0.006,
confidence = 0.25, minlen = 2))
groceryrules
summary(groceryrules)
inspect(groceryrules[1:3])
inspect(sort(groceryrules, by = "lift")[1:5])
groceryrules_df <- as(groceryrules, "data.frame")
str(groceryrules_df)
rules = sapply(groceryrules_df$rules,function(x){
x = gsub("[\\{\\}]", "", regmatches(x, gregexpr("\\{.*\\}", x))[[1]])
x = gsub("=>",",",x)
x = str_replace_all(x," ","")
return( x )
})
rules = as.character(rules)
rules = str_split(rules,",")
groceryrules_df$lhs = sapply( rules, "[[", 1)
groceryrules_df$rhs = sapply( rules , "[[", 2)
groceryrules_df$rules = NULL
rm(rules)
gc()
#groceryrules_df = groceryrules_df %>% left_join(groceries,by=c("lhs"="lhs") )
groceryrules_df %>% arrange(desc(lift)) %>% select(lhs,rhs,support,confidence,lift) %>% head()
#################selected item from UI by user
dbListFields(con, 'Selected_Items')
rs = dbSendQuery(con, "select * from Selected_Items ORDER BY ID DESC LIMIT 1")
data = fetch(rs, n=-1)
userid <- data$user_ID
item<-data$Item_Name
recom_table<-groceryrules_df %>%
filter(str_detect(lhs, item) ) %>%
select(lhs,rhs,support,confidence,lift) %>%
head(20)
# recom_table  <- data.frame(recom_table)
# userid<-'NULL'
recom_table<-cbind(recom_table,userid)
#dbListTables(con)
name<-"recommendation"
dbWriteTable(con, name, recom_table, append=TRUE, row.names=FALSE)
# my_rscript.R
setwd("/Applications/XAMPP/xamppfiles/htdocs/Client_project")
args <- commandArgs(TRUE)
N <- args[1]
x <- rnorm(N,0,1)
png(filename="temp.png", width=500, height=500)
hist(x, col="lightblue")
dev.off()
x <- rnorm(N,0,1)
N <- args[1]
x <- rnorm(N,0,1)
library("NLP")
library("twitteR", lib.loc="~/R/win-library/3.3")
library("syuzhet", lib.loc="~/R/win-library/3.3")
#install.packages('tm')
library("tm")
#install.packages('SnowballC')
library("SnowballC")
#install.packages('stringi')
library("stringi")
#install.packages('topicmodels')
library("topicmodels")
#install.packages('syuzhet')
library("syuzhet")
library("ROAuth")
UNITED_KINGDOM_text <- UNITED_KINGDOM_TWEETS$text
require(twitteR)
require(RCurl)
consumer_key <- 'nq4PEhuGRhNFqXAAzKuPyHHl8'
consumer_secret <- 'M8Fjnvz8TWVk1qtp1PLfuVGAVbEVUfWVLSk780Ydm1yqa6vrEg'
access_tokens <- '132203063-hqQPAU9Yvb79Q31vQ1oBPiu1UQlRDeXteXk0YJYO'
access_secret <- '92KYV1qCwsHxYbT0x584WnmAX58AUvYylGNvlbCVPU0Vq'
setup_twitter_oauth(consumer_key, consumer_secret, access_tokens, access_secret)
setup_twitter_oauth(consumer_key, consumer_secret, access_tokens, access_secret)
UNITED_KINGDOM_TWEETS <- searchTwitter("UNITED_KINGDOM_GDP", n=100000, lang="en")
UNITED_KINGDOM_text <- UNITED_KINGDOM_TWEETS$text
UNITED_KINGDOM_text <- tolower(UNITED_KINGDOM_text)
UNITED_KINGDOM_text <- gsub("rt", "",UNITED_KINGDOM_text)
UNITED_KINGDOM_text <- gsub("@\\w+", "",UNITED_KINGDOM_text)
UNITED_KINGDOM_text <- gsub("[[:punct:]]", "",UNITED_KINGDOM_text)
UNITED_KINGDOM_text <- gsub("http\\w+", "",UNITED_KINGDOM_text)
UNITED_KINGDOM_text <- gsub("[ |\t]{2,}", "",UNITED_KINGDOM_text)
UNITED_KINGDOM_text <- gsub("^ ", "",UNITED_KINGDOM_text)
UNITED_KINGDOM_text <- gsub(" $", "",UNITED_KINGDOM_text)
UNITED_KINGDOM_text.corpus <- tm_map(UNITED_KINGDOM_text.corpus, function(x)removeWords(x,stopwords()))
library(tm)
library(tmap)
library("corpus")
mysentiment_UK<-get_nrc_sentiment((UNITED_KINGDOM_text))
mysentiment_UK<-get_nrc_sentiment((UNITED_KINGDOM_text))
View(UNITED_KINGDOM_TWEETS)
mysentiment_POLAND<-get_nrc_sentiment((POLAND_text))
mysentiment_UK<-get_nrc_sentiment((UNITED_KINGDOM_text))
UNITED_KINGDOM_text <- gsub(" $", "",UNITED_KINGDOM_text)
mysentiment_NITED_KINGDOM<-get_nrc_sentiment((UNITED_KINGDOM_text))
library("RColorBrewer")
library("wordcloud")
#install.packages('ggplot')
library("ggplot2")
mysentiment_NITED_KINGDOM<-get_nrc_sentiment((UNITED_KINGDOM_text))
library(tm)
#install.packages('tmap')
library(tmap)
#install.packages('corpus')
library("corpus")
mysentiment_UNITED_KINGDOM<-get_nrc_sentiment((UNITED_KINGDOM_text))
library('syuzhet')
mysentiment_UNITED_KINGDOM<-get_nrc_sentiment((UNITED_KINGDOM_text))
mysentiment_UNITED_KINGDOM<-get_nrc_sentiment((UNITED_KINGDOM_text))
UNITED_KINGDOM_text
UNITED_KINGDOM_text <- UNITED_KINGDOM_TWEETS$text
UNITED_KINGDOM_TWEETS <- twListToDF(UNITED_KINGDOM_TWEETS)
View(UNITED_KINGDOM_TWEETS)
UNITED_KINGDOM_text <- UNITED_KINGDOM_TWEETS$text
UNITED_KINGDOM_text <- tolower(UNITED_KINGDOM_text)
UNITED_KINGDOM_text <- gsub("rt", "",UNITED_KINGDOM_text)
UNITED_KINGDOM_text <- gsub("@\\w+", "",UNITED_KINGDOM_text)
UNITED_KINGDOM_text <- gsub("[[:punct:]]", "",UNITED_KINGDOM_text)
UNITED_KINGDOM_text <- gsub("http\\w+", "",UNITED_KINGDOM_text)
UNITED_KINGDOM_text <- gsub("[ |\t]{2,}", "",UNITED_KINGDOM_text)
UNITED_KINGDOM_text <- gsub("^ ", "",UNITED_KINGDOM_text)
UNITED_KINGDOM_text <- gsub(" $", "",UNITED_KINGDOM_text)
mysentiment_UK<-get_nrc_sentiment((UNITED_KINGDOM_text))
Sentimentscores_UK<-data.frame(colSums(mysentiment_UK[,]))
names(Sentimentscores_UK)<-"Score"
Sentimentscores_UK<-cbind("sentiment"=rownames(Sentimentscores_UK),Sentimentscores_UK)
rownames(Sentimentscores_UK)<-NULL
ggplot(data=Sentimentscores_UK,aes(x=sentiment,y=Score))+geom_bar(aes(fill=sentiment),stat = "identity")+
theme(legend.position="none")+
xlab("Sentiments")+ylab("scores")+ggtitle("Sentiments of people behind the tweets on UK")
library(dplyr)
library(reshape2)
library(Matrix)
library(stringr)
#install.packages('stringdist')
library(stringdist)
#insatll.packages('arulesViz')
#library(arulesViz)
#install.packages('arules')
library(arules)
setwd("/Applications/XAMPP/xamppfiles/htdocs/Client_project")
groceries<-read.transactions("items.csv",sep = ",")
summary(groceries)
#install.packages('RMySQL')
require(RMySQL) #if already installed
con <- dbConnect(RMySQL::MySQL() ,host = "127.0.0.1",dbname="be_fit",user = "root", password = "" )
setwd("/Applications/XAMPP/xamppfiles/htdocs/Client_project")
items<-read.csv("list.csv",sep = ",")
itemsdf<- data.frame(items)
dbListTables(con)
inspect(groceries[1:5])
itemFrequency(groceries[, 1:3])
itemFrequencyPlot(groceries, support = 0.1)
itemFrequencyPlot(groceries, topN = 20)
image(groceries[1:5])
groceryrules <- apriori(groceries, parameter = list(support = 0.006,
confidence = 0.25, minlen = 2))
groceryrules
summary(groceryrules)
inspect(groceryrules[1:3])
inspect(sort(groceryrules, by = "lift")[1:5])
groceryrules_df <- as(groceryrules, "data.frame")
str(groceryrules_df)
rules = sapply(groceryrules_df$rules,function(x){
x = gsub("[\\{\\}]", "", regmatches(x, gregexpr("\\{.*\\}", x))[[1]])
x = gsub("=>",",",x)
x = str_replace_all(x," ","")
return( x )
})
rules = as.character(rules)
rules = str_split(rules,",")
groceryrules_df$lhs = sapply( rules, "[[", 1)
groceryrules_df$rhs = sapply( rules , "[[", 2)
groceryrules_df$rules = NULL
rm(rules)
gc()
#groceryrules_df = groceryrules_df %>% left_join(groceries,by=c("lhs"="lhs") )
groceryrules_df %>% arrange(desc(lift)) %>% select(lhs,rhs,support,confidence,lift) %>% head()
#################selected item from UI by user
dbListFields(con, 'Selected_Items')
rs = dbSendQuery(con, "select * from Selected_Items ORDER BY ID DESC LIMIT 1")
data = fetch(rs, n=-1)
userid <- data$user_ID
item<-data$Item_Name
recom_table<-groceryrules_df %>%
filter(str_detect(lhs, item) ) %>%
select(lhs,rhs,support,confidence,lift) %>%
head(20)
View(recom_table)
# recom_table  <- data.frame(recom_table)
# userid<-'NULL'
recom_table<-cbind(recom_table,userid)
dbWriteTable(con, name, recom_table, append=TRUE, row.names=FALSE)
